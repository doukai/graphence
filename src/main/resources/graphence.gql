type User {
    id: ID @dataType(type: "int") @column(autoIncrement: true)
    name: String!
    login: String!
    password: String!
    disable: Boolean
    organizationId: Int
    organization: Organization @map(from: "organizationId" to: "id" anchor: true)
    roles: [Role] @map(from: "id" with: {type: "UserRole" from: "userId" to: "roleId"} to: "id")
}

type UserRole {
    id: ID @dataType(type: "int") @column(autoIncrement: true)
    userId: Int
    roleId: Int
}

type Role {
    id: ID @dataType(type: "int") @column(autoIncrement: true)
    name: String!
    organizationId: Int
    users: [User] @map(from: "id" with: {type: "UserRole" from: "roleId" to: "userId"} to: "id")
    permissions: [Permission] @map(from: "id" to: "roleId")
    parents: [Role] @map(from: "id" with: {type: "RoleParent" from: "roleId" to: "parentId"} to: "id")
}

type RoleParent {
    id: ID @dataType(type: "int") @column(autoIncrement: true)
    roleId: Int
    parentId: Int
}

type Organization {
    id: ID @dataType(type: "int") @column(autoIncrement: true)
    name: String!
    aboveId: Int
    above: Organization @map(from: "aboveId" to: "id" anchor: true)
    users: [User] @map(from: "id" to: "organizationId")
}

type Domain {
    id: ID @dataType(type: "int") @column(autoIncrement: true)
    name: String!
    users: [User] @map(from: "id" to: "domainId")
}

type Permission {
    id: ID @dataType(type: "int") @column(autoIncrement: true)
    roleId: String
    role: Role! @map(from: "roleId" to: "id" anchor: true)
    fieldId: String
    field: __Field! @map(from: "fieldId" to: "id" anchor: true)
    level: PermissionLevel
}

enum PermissionLevel {
    READ
    WRITE
}